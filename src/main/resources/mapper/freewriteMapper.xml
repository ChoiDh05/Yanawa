<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.yanawa.mapper.freewrite.FreewriteMapper">


    <insert id="insert">
        INSERT INTO TBL_FREEWRITE(ID, FREEWRITE_READ_COUNT, REPLY_COUNT, MEMBER_ID, CREATED_DATE, UPDATED_DATE)
        VALUES (#{id}, #{freewriteReadCount}, #{replyCount}, #{memberId}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    </insert>



    <!-- 총 게시물 수 조회 -->
    <select id="selectTotal">
        SELECT COUNT(*) FROM TBL_FREEWRITE
    </select>

    <select id="selectById" resultType="freewriteDTO">
        SELECT
            f.ID, f.FREEWRITE_READ_COUNT, f.REPLY_COUNT, f.MEMBER_ID, f.CREATED_DATE, f.UPDATED_DATE,
            p.POST_TITLE, p.POST_CONTENT, u.MEMBER_NICKNAME
        FROM
            TBL_FREEWRITE f
                JOIN TBL_POST p ON f.ID = p.ID
                JOIN TBL_MEMBER u ON f.MEMBER_ID = u.ID
        WHERE
            f.ID = #{id}
    </select>


    <!--    조회수 증가-->
    <update id="increaseReadCount" parameterType="Long">
        UPDATE TBL_FREEWRITE
        SET FREEWRITE_READ_COUNT = FREEWRITE_READ_COUNT + 1
        WHERE ID = #{id}
    </update>

    <!-- 게시글 수정 -->
    <!-- TBL_POST 수정 -->
    <update id="updatePost" parameterType="freewriteVO">
        UPDATE TBL_POST
        SET
            POST_TITLE = #{postTitle},
            POST_CONTENT = #{postContent},
            UPDATED_DATE = CURRENT_TIMESTAMP
        WHERE
            ID = #{id}
    </update>

    <!-- TBL_FREEWRITE 수정 -->
    <update id="updateFreewrite" parameterType="freewriteVO">
        UPDATE TBL_FREEWRITE
        SET
            UPDATED_DATE = CURRENT_TIMESTAMP
        WHERE
            ID = #{id}
    </update>




    <!-- 게시글 삭제 -->
    <delete id="deleteById" parameterType="Long">
        DELETE FROM TBL_FREEWRITE
        WHERE ID = #{id}
    </delete>

    <!-- TBL_POST 테이블에서도 함께 삭제 -->
    <delete id="deletePostById" parameterType="Long">
        DELETE FROM TBL_POST
        WHERE ID = #{id}
    </delete>

    <!-- 통합 검색 쿼리 -->
    <sql id="search">
        <if test="search.keyword != null and search.keyword != ''">
            AND (
            U.MEMBER_NICKNAME LIKE '%' || #{search.keyword} || '%'
            OR P.POST_TITLE LIKE '%' || #{search.keyword} || '%'
            OR P.POST_CONTENT LIKE '%' || #{search.keyword} || '%'
            )
        </if>
    </sql>


    <!-- 조회 쿼리 -->
    <select id="selectAll" resultType="freewriteDTO">
        SELECT *
        FROM (
        SELECT
        ROWNUM AS rnum, temp.*
        FROM (
        SELECT
        F.ID, U.MEMBER_NICKNAME, F.FREEWRITE_READ_COUNT, F.REPLY_COUNT, F.MEMBER_ID,
        F.CREATED_DATE, F.UPDATED_DATE, P.POST_TITLE, P.POST_CONTENT
        FROM
        TBL_MEMBER U
        JOIN TBL_FREEWRITE F ON U.ID = F.MEMBER_ID
        JOIN TBL_POST P ON F.ID = P.ID
        WHERE F.ID IS NOT NULL
        <include refid="search"/>
        ORDER BY
        <choose>
            <when test="search.order == 'recent'">
                F.ID DESC
            </when>
            <otherwise>
                F.FREEWRITE_READ_COUNT DESC
            </otherwise>
        </choose>
        ) temp
        )
        WHERE rnum BETWEEN #{pagination.startRow} AND #{pagination.endRow}
    </select>


    <!-- 검색 조건이 포함된 총 게시물 수 조회 -->
    <select id="selectTotalWithSearch">
        SELECT COUNT(*)
        FROM TBL_MEMBER U
        JOIN TBL_FREEWRITE F ON U.ID = F.MEMBER_ID
        JOIN TBL_POST P ON F.ID = P.ID
        WHERE F.ID IS NOT NULL
        <include refid="search"/>
    </select>


    <!-- 첨부파일 저장 -->
    <insert id="insertAttachment">
        INSERT INTO TBL_ATTACHMENT (ID, ATTACHMENT_PATH, ATTACHMENT_SIZE, POST_ID, CREATED_DATE, UPDATED_DATE)
        VALUES (SEQ_ATTACHMENT.NEXTVAL, #{attachmentPath}, #{attachmentSize}, #{postId}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    </insert>


</mapper>
